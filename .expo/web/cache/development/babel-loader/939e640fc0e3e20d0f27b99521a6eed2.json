{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Karan\\\\Downloads\\\\pro-c80-space-data-teller\\\\screens\\\\StarMap.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { ImageBackgrounda } from \"react-native-web/dist/index\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { WebView } from 'react-native-webview';\n\nvar StarMapScreen = function (_Component) {\n  _inherits(StarMapScreen, _Component);\n\n  var _super = _createSuper(StarMapScreen);\n\n  function StarMapScreen() {\n    var _this;\n\n    _classCallCheck(this, StarMapScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      longitude: '',\n      latitude: ''\n    };\n    return _this;\n  }\n\n  _createClass(StarMapScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          longitude = _this$state.longitude,\n          latitude = _this$state.latitude;\n      var path = \"https://virtualsky.lco.global/embed/index.html?longitude=\" + longitude + \"&latitude=\" + latitude + \"&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true&projection=stereo&showdate=false&showposition=false\";\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"#1a0023\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, \"/*SafeAreaView so that there is no colision between Status BAr and header and other things */\", React.createElement(SafeAreaView, {\n        style: styles.droidSafeArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 0.3,\n          marginTop: 20,\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"/*Add header */\", React.createElement(Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, \"Star Map\"), \"/*Add text inpute for longtitude */\", React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Enter your longitude\",\n        placeholderTextColor: \"white\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            longitude: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }), \"/*Add text input for latitude */\", React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Enter your latitude\",\n        placeholderTextColor: \"white\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            latitude: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      })), \"/*WebView the url from the path */\", React.createElement(WebView, {\n        scalesPageToFit: true,\n        source: {\n          uri: path\n        },\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return StarMapScreen;\n}(Component);\n\nexport { StarMapScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover'\n  },\n  titleText: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    color: \"white\",\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  inputStyle: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 20,\n    marginTop: 20,\n    marginRight: 20,\n    marginLeft: 20,\n    textAlign: 'center',\n    color: 'white',\n    width: 200\n  }\n});","map":{"version":3,"sources":["C:/Users/Karan/Downloads/pro-c80-space-data-teller/screens/StarMap.js"],"names":["React","Component","ImageBackgrounda","WebView","StarMapScreen","state","longitude","latitude","path","flex","backgroundColor","styles","droidSafeArea","marginTop","alignItems","titleText","inputStyle","text","setState","uri","marginBottom","StyleSheet","create","container","justifyContent","Platform","OS","StatusBar","currentHeight","backgroundImage","resizeMode","fontSize","fontWeight","color","alignContent","height","borderColor","borderWidth","borderRadius","marginRight","marginLeft","textAlign","width"],"mappings":"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","sourcesContent":["/*Import all the required components/etc from required libraries/dependicies*/\r\nimport React, { Component } from 'react';\r\nimport { Text, View, TextInput, StyleSheet, Platform, StatusBar, SafeAreaView, ImageBackgrounda, ImageBackground } from 'react-native';\r\nimport { WebView } from 'react-native-webview';\r\n\r\n/*Create Default class StarMapScreen */\r\nexport default class StarMapScreen extends Component {\r\n  /*Create constructor */\r\n  constructor() {\r\n    /*Super function */\r\n    super()\r\n    /*Create this.state and enter required values inside it */\r\n    this.state = {\r\n      longitude: '',\r\n      latitude: ''\r\n    }\r\n  }\r\n  render() {\r\n    /*Create const for longtitude and latitude and then add the api link in a const */\r\n    const { longitude, latitude } = this.state;\r\n    const path = `https://virtualsky.lco.global/embed/index.html?longitude=${longitude}&latitude=${latitude}&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true&projection=stereo&showdate=false&showposition=false`\r\n    /*Create return function */\r\n    return (\r\n      <View style={{ flex: 1, backgroundColor: \"#1a0023\" }}>\r\n      /*SafeAreaView so that there is no colision between Status BAr and header and other things */\r\n        <SafeAreaView style={styles.droidSafeArea} />\r\n        <View style={{ flex: 0.3, marginTop: 20, alignItems: 'center' }}>\r\n        /*Add header */\r\n          <Text style={styles.titleText}>Star Map</Text>\r\n          /*Add text inpute for longtitude */\r\n          <TextInput\r\n            style={styles.inputStyle}\r\n            placeholder=\"Enter your longitude\"\r\n            placeholderTextColor=\"white\"\r\n            onChangeText={(text) => {\r\n              this.setState({\r\n                longitude: text\r\n              })\r\n            }}\r\n          />\r\n          /*Add text input for latitude */\r\n          <TextInput\r\n            style={styles.inputStyle}\r\n            placeholder=\"Enter your latitude\"\r\n            placeholderTextColor=\"white\"\r\n            onChangeText={(text) => {\r\n              this.setState({\r\n                latitude: text\r\n              })\r\n            }}\r\n          />\r\n        </View>\r\n        /*WebView the url from the path */\r\n        <WebView\r\n          scalesPageToFit={true}\r\n          source={{ uri: path }}\r\n          style={{ marginTop: 20, marginBottom: 20, }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n/*StyleSheets */\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  droidSafeArea: {\r\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\r\n  },\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: 'cover',\r\n  },\r\n  titleText: {\r\n    fontSize: 35,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n  inputStyle: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    marginTop: 20,\r\n    marginRight: 20,\r\n    marginLeft: 20,\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    width: 200\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}